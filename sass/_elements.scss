@charset "utf-8";

/*! Elements
    ============================================================================= */

////
/// _elements.scss 文件用于提供一些常用的原子样式。
///
/// @group elements
/// @author Bios Sun <biossun@gmail.com>
////


// 类名配置
// ---------------------------

// 外边距

/// 设置「**外边距**」原子样式类的类名
/// @type string
$nojiko-el-margin:                        m                          !default;

/// 设置「**垂直方向外边距**」原子样式类的类名
/// @type string
$nojiko-el-margin-vertical:               mv                         !default;

/// 设置「**水平方向外边距**」原子样式类的类名
/// @type string
$nojiko-el-margin-horizontal:             mh                         !default;

/// 设置「**顶部外边距**」原子样式类的类名
/// @type string
$nojiko-el-margin-top:                    mt                         !default;

/// 设置「**底部外边距**」原子样式类的类名
/// @type string
$nojiko-el-margin-bottom:                 mb                         !default;

/// 设置「**左边外边距**」原子样式类的类名
/// @type string
$nojiko-el-margin-left:                   ml                         !default;

/// 设置「**右边外边距**」原子样式类的类名
/// @type string
$nojiko-el-margin-right:                  mr                         !default;

/// 设置 「**较大的外边距**」原子样式类的类名后缀
/// @type string
$nojiko-el-margin-suffix-large:           -l                          !default;

/// 设置 「**较小的外边距**」原子样式类的类名后缀
/// @type string
$nojiko-el-margin-suffix-small:           -s                          !default;


// 内边距

/// 设置「**内边距**」原子样式类的类名
/// @type string
$nojiko-el-padding:                       p                          !default;

/// 设置「**垂直方向内边距**」原子样式类的类名
/// @type string
$nojiko-el-padding-vertical:              pv                         !default;

/// 设置「**水平方向内边距**」原子样式类的类名
/// @type string
$nojiko-el-padding-horizontal:            ph                         !default;

/// 设置「**顶部内边距**」原子样式类的类名
/// @type string
$nojiko-el-padding-top:                   pt                         !default;

/// 设置「**底部内边距**」原子样式类的类名
/// @type string
$nojiko-el-padding-bottom:                pb                         !default;

/// 设置「**左边内边距**」原子样式类的类名
/// @type string
$nojiko-el-padding-left:                  pl                         !default;

/// 设置「**右边内边距**」原子样式类的类名
/// @type string
$nojiko-el-padding-right:                 pr                         !default;

/// 设置 「**较大的外边距**」原子样式类的类名后缀
/// @type string
$nojiko-el-padding-suffix-large:          -l                          !default;

/// 设置 「**较小的外边距**」原子样式类的类名后缀
/// @type string
$nojiko-el-padding-suffix-small:          -s                          !default;


// 隐藏

/// 设置「**完全隐藏元素**」原子样式类的类名
/// @type string
$nojiko-el-hidden:                        h                          !default;

/// 设置「**只在普通屏幕上隐藏元素，而在屏幕阅读器中显示**」原子样式类的类名
/// @type string
$nojiko-el-visually-hidden:               hv                         !default;

/// 设置「**在视觉及屏幕阅读器中隐藏元素，但保持布局结构**」原子样式类的类名
/// @type string
$nojiko-el-invisible:                     hi                         !default;

/// 设置「**设置元素向左浮动**」原子样式类的类名
/// @type string
$nojiko-el-float-left:                    fl                         !default;

/// 设置「**设置元素向右浮动**」原子样式类的类名
/// @type string
$nojiko-el-float-right:                   fr                         !default;

/// 设置「**清除元素内部浮动**」原子样式类的类名
/// @type string
$nojiko-el-clear-float:                   fc                         !default;


// 相关混入类
// ---------------------------

/// 生成各个方向上的内/外间距样式
///
/// @access private
///
/// @param {Map} $classes - 各个方向的类名定义，如 (all: 'm', top: 'mt', right: 'mr', bottom: 'mb', left: 'ml', vertical: 'mv', horizontal: 'mh')
/// @param {String} $prefix - 统一类名前缀
/// @param {String} $suffix - 统一类名后缀
/// @param {'margin' | 'padding'} $property - 间距属性
/// @param {Length} $vertical - 垂直方向上的间距值
/// @param {Length} $horizontal - 水平方向上的间距值
@mixin nojiko-el-distance(
    $classes,

    $prefix, 
    $suffix, 
    
    $property,
    
    $vertical, 
    $horizontal
) {

    // 生成各个方向上的 class 名称
    $c:  map-get($classes, all);
    $cv: map-get($classes, vertical);
    $ch: map-get($classes, horizontal);
    $ct: map-get($classes, top);
    $cb: map-get($classes, bottom);
    $cl: map-get($classes, left);
    $cr: map-get($classes, right);

    $c:  if($c,  '.#{$prefix}#{$c}#{$suffix}',  null);
    $cv: if($cv, '.#{$prefix}#{$cv}#{$suffix}', null);
    $ch: if($ch, '.#{$prefix}#{$ch}#{$suffix}', null);
    $ct: if($ct, '.#{$prefix}#{$ct}#{$suffix}', null);
    $cb: if($cb, '.#{$prefix}#{$cb}#{$suffix}', null);
    $cl: if($cl, '.#{$prefix}#{$cl}#{$suffix}', null);
    $cr: if($cr, '.#{$prefix}#{$cr}#{$suffix}', null);

    $ct: list-compact( ($ct, $cv) );
    $cb: list-compact( ($cb, $cv) );
    $cl: list-compact( ($cl, $ch) );
    $cr: list-compact( ($cr, $ch) );

    // 若间距值无单位的话，默认使用 px
    @if unit($vertical) == "" { $vertical: $vertical + 0px; }
    @if unit($horizontal) == "" { $horizontal: $horizontal + 0px; }

    // 输出 $classes.all 的样式
    @if $c {
        #{$c} {
            @if $vertical == $horizontal {
                #{$property}: $vertical;
            }
            @else {
                #{$property}: $vertical $horizontal;
            }
        }
    }

    // 输出其余方向的样式
    @each $item in (
        // class, direction, value
        ($ct, top, $vertical),
        ($cb, bottom, $vertical),
        ($cl, left, $horizontal),
        ($cr, right, $horizontal)
    ) {
        $classes: nth($item, 1);
        $property-suffix: nth($item, 2);
        $value: nth($item, 3);

        @if length($classes) > 0 {
            #{$classes} {
                #{$property}-#{$property-suffix}: $value;
            }
        }
    }
}

/// 生成各个方向上的外间距样式；
///
/// 基础类名分别使用全局配置变量：
///
/// - $nojiko-el-margin
/// - $nojiko-el-margin-vertical
/// - $nojiko-el-margin-horizontal
/// - $nojiko-el-margin-top
/// - $nojiko-el-margin-bottom
/// - $nojiko-el-margin-left
/// - $nojiko-el-margin-right
///
/// @param {String} $prefix - 类名前缀
/// @param {String} $suffix - 类名后缀
/// @param {Length} $vertical - 垂直方向上的间距值
/// @param {Length} $horizontal - 水平方向上的间距值
///
/// @example scss - source
/// 
///     @include el-marge('p-', '-s', 10px, 20px);
///
/// @example css - output
///
///     .p-m-s { margin: 10px 20px; }
///
///     .p-mt-s, .p-mv-s { margin-top:    10px; }
///     .p-mb-s, .p-mv-s { margin-bottom: 10px; }
///     .p-ml-s, .p-mh-s { margin-left:   20px; }
///     .p-mr-s, .p-mh-s { margin-right:  20px; }
@mixin el-margin($prefix, $suffix, $vertical, $horizontal) {
    @include nojiko-el-distance(
        $classes: (
            all: $nojiko-el-margin,
            vertical: $nojiko-el-margin-vertical,
            horizontal: $nojiko-el-margin-horizontal,
            top: $nojiko-el-margin-top,
            bottom: $nojiko-el-margin-bottom,
            left: $nojiko-el-margin-left,
            right: $nojiko-el-margin-right
        ),

        $prefix: $prefix,
        $suffix: $suffix,

        $property: margin,
        
        $vertical: $vertical,
        $horizontal: $horizontal
    );
}

/// 生成各个方向上的内间距样式；
///
/// 基础类名分别使用全局配置变量：
///
/// - $nojiko-el-padding
/// - $nojiko-el-padding-vertical
/// - $nojiko-el-padding-horizontal
/// - $nojiko-el-padding-top
/// - $nojiko-el-padding-bottom
/// - $nojiko-el-padding-left
/// - $nojiko-el-padding-right
///
/// @param {String} $prefix - 类名前缀
/// @param {String} $suffix - 类名后缀
/// @param {Length} $vertical - 垂直方向上的间距值
/// @param {Length} $horizontal - 水平方向上的间距值
///
/// @example scss - source
/// 
///     @include el-padding('p-', '-s', 10px, 20px);
///
/// @example css - output
///
///     .p-p-s { padding: 10px 20px; }
///
///     .p-pt-s, .p-pv-s { padding-top:    10px; }
///     .p-pb-s, .p-pv-s { padding-bottom: 10px; }
///     .p-pl-s, .p-ph-s { padding-left:   20px; }
///     .p-pr-s, .p-ph-s { padding-right:  20px; }
@mixin el-padding($prefix, $suffix, $vertical, $horizontal) {
    @include nojiko-el-distance(
        $classes: (
            all: $nojiko-el-padding,
            vertical: $nojiko-el-padding-vertical,
            horizontal: $nojiko-el-padding-horizontal,
            top: $nojiko-el-padding-top,
            bottom: $nojiko-el-padding-bottom,
            left: $nojiko-el-padding-left,
            right: $nojiko-el-padding-right
        ),

        $prefix: $prefix,
        $suffix: $suffix,

        $property: padding,
        
        $vertical: $vertical,
        $horizontal: $horizontal
    );
}


// 外边距
// ---------------------------

@include el-margin(null, null, $distance-vertical, $distance-horizontal);

@if $nojiko-el-margin-suffix-large {
    @include el-margin(null, $nojiko-el-margin-suffix-large, $distance-vertical-large, $distance-horizontal-large);
}

@if $nojiko-el-margin-suffix-small {
    @include el-margin(null, $nojiko-el-margin-suffix-small, $distance-vertical-small, $distance-horizontal-small);
}


// 内边距
// ---------------------------

@include el-padding(null, null, $distance-vertical, $distance-horizontal);

@if $nojiko-el-padding-suffix-large {
    @include el-padding(null, $nojiko-el-padding-suffix-large, $distance-vertical-large, $distance-horizontal-large);
}

@if $nojiko-el-padding-suffix-small {
    @include el-padding(null, $nojiko-el-padding-suffix-small, $distance-vertical-small, $distance-horizontal-small);
}


// 隐藏元素
// ---------------------------

@if $nojiko-el-hidden { .#{$nojiko-el-hidden} { display: none !important; visibility: hidden; } }

@if $nojiko-el-visually-hidden {
    .#{$nojiko-el-visually-hidden} {
        position: absolute;
        width: 1px;
        height: 1px;
        margin: -1px;
        padding: 0;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        border: 0;
    }

    .#{$nojiko-el-visually-hidden}-focusable {
        &:active,
        &:focus {
            position: static;
            width: auto;
            height: auto;
            margin: 0;
            overflow: visible;
            clip: auto;
        }
    }
}

@if $nojiko-el-invisible {
    .#{$nojiko-el-invisible} {
        visibility: hidden;
    }
}


// 浮动
// ---------------------------

@if $nojiko-el-float-left  { .#{$nojiko-el-float-left}  { float: left;  } }
@if $nojiko-el-float-right { .#{$nojiko-el-float-right} { float: right; } }
@if $nojiko-el-clear-float { .#{$nojiko-el-clear-float} { @include clearfix;     } }
